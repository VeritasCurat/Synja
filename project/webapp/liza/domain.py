import sys, time,  random

#The story is a basic element of teaching - it's a question or quiz, wrapped up in some kind of context.
#make sure to have many stories per topic (at least 5, better 10-20).
class Story(object):
  question = ""
  
  
  def __init__(self, group, text, question, altquestion, correct, incorrect, intro, yes, no, answercorrect, answerincorrect, explain, hint):
   self.group = group #the topic the story belongs to
   self.text = text #explaining text, what is this all about
   self.question = question #the actual question the user has to answer
   self.altquestion = altquestion #an alternativ phrasing
   self.correct = correct #array of correct keywords
   self.incorrect = incorrect #array of incorrect keywords
   self.intro = intro #optional introduction to set the scene before the basic text of the story
   self.introyes = yes #reaction for one answer to the intro
   self.introno = no #reaction for the other possible answer to the intro
   self.answercorrect = answercorrect #answer if the story was solved correctly
   self.answerincorrect = answerincorrect #answer if the story was solved incorrectly
   self.explain = explain #explanation of the correct solution
   self.hint = hint #hint for helping the user
  
  
class Domain:
 def __init__(self):
 
  #let's initiate with ALL the stories
  
  self.topics = ["Gambler's Fallacy","Sunk Cost Fallacy","regression to the mean","Base Rate Fallacy"]
  #self.topics = [""]
  self.base_rate = []
  self.sunk_cost = []
  self.regression = []
  self.gamblers_fallacy = []
 
  self.stories = []
  self.stories.append(self.sunk_cost)
  self.stories.append(self.gamblers_fallacy)
  self.stories.append(self.regression)
  self.stories.append(self.base_rate)
  
  self.explained = []
  self.explained = []
  sunk = 0
  gambler = 1
  regression = 2
  baserate = 3
  self.explanations = ["","","","",""]
  
  self.explanations[sunk] = "It is basically 'throwing good money (or time, or effort) after bad'. The sunk cost fallacy occurs when you try to invest more in something just because you already invested a lot. The sunk cost is what you already invested and can't get back. But regardless of that, you should look at the future and which option will have objectively better results, instead of letting remorse blind you."
  self.explanations[gambler] = "This happens when people observe a series of events, and if something happens more frequently than expected, they assume it will happen less often in the future (and vice versa). But if you look at independent random events, than the past can never influence the future."
  self.explanations[regression] = "This is about what a sample can tell you about a whole population. When you observe some events, very good or bad outcomes are most of the time not just due to some underlying quality, but also influenced by luck. The essence of the regression-toward-the-mean phenomenon is that events with extraordinary outcomes tend to be above average in some quality (e.g. skill of a person) and in luck and that only the skill portion is relevant to future performance. If you have only a small sample from a population, those effects of random good or bad luck can have a strong influence on what the average looks like. But if you chose a very large sample, the random effects will eventually even out and the average will come closer to the true mean."
  self.explanations[baserate] = "The next problem is about solving problems with conditional probabilities. It's a bit mathematical, but don't worry. People tend to ignore certain parts of statistical information because they confuse them. But most of the time, this kind of problem is actually easy to solve! Just try to imagine it with a big number - let's say 10,000. Then you look at how many of those 10,000 (whatever it is) fall into one category or another, and to how many a certain condition applies. Use all the information you have. If you calculate with those populations, the outcome is equivalent to calculating probabilities, but it's much easier. This way, you can solve conditional probability problems without knowing any statistical rule."
  
  self.groups = ["","","","",""]
  self.groups[sunk] = "This is about a common fallacy that occurs when people already invested a lot of time or effort in something: The sunk cost fallacy."
  self.groups[baserate] = "This is about the base rate fallacy. It has to do with estimating probabilities correctly."
  self.groups[gambler] = "Ah, this is about the gambler's fallacy."
  self.groups[regression] = "This time we are talking about the regression to the mean."

  
  self.praise = ["","","","",""]
  self.criticism = ["","","","",""]
  
  
  self.praise[sunk] = "You are really good at rationally weighing your options."
  self.praise[baserate] = "You are extremely good with percentages!"
  self.praise[gambler] = "You are clever when it comes to chances!"
  self.praise[regression] = "You really good at spotting actual causes for outlier events."
  
  self.criticism[sunk] = "You should really try to be more rational in weighing your options."
  self.criticism[baserate] = "This is a hard topic, but try to write down your solution and all the possible ways things can turn out."
  self.criticism[gambler] = "You should probably stay away from Vegas for now. Try to apply what you now about the mathematics of chance!"
  self.criticism[regression] = "You are jumping to conclusions a little to quickly."
  
  StoryBoringCinema = Story(sunk, "Imagine you are in another town and you have decided to go to a small local cinema. You buy a ticket and make yourself comfortable, waiting for the movie. After a while, you notice that you're the only person in the room. The movie starts, and you try to enjoy it, but after roughly ten minutes you come to the conclusing that it's probably the most boring movie you've ever seen. The sun is shining outside and you could probably do a lot of things in the town that are more fun than watching this movie, but on the other hand, you already bought the ticket.", "Do you want to leave the cinema right now, or do you want to stay and sit through the movie even though it's boring?", "Do you continue watching since you already paid, or do you decide to do something more enjoyable?", "leave, quit, go , other, else", "watch, stay, continue, keep, go on, waste, already, sit through", "","","", "That's a very reasonable decision.", "You probably fell prey to the sunk cost fallacy.", "In economics, a sunk cost is any cost that has already been paid and cannot be recovered. You already spent money on the ticket and you will not get it back, regardless of your decision to stay or to leave the cinema. You basically have to choose between two alternatives: a) having spent money and being bored or b) having spent money and going out doing something more fun. It's much more reasonable to just let go of the movie and make the best out of the situation you have.", "some hint")
  StoryTheatre = Story(sunk, "You wanted to go to the theatre this weekend, but by mistake, you purchased tickets for the Someplace Playhouse and also for the National Theatre for the same evening. The show at Someplace Playhouse has cost you $25, and the tickets for the National Theatre have cost you $80. You cannot give back either of them and there's no possibility of selling them or giving them away for free, because they have your name on them. You have to discard the tickets for one of the shows and let them expire. The show at the Someplace Playhouse seems to be more interesting and enjoyable to you.", "Which of the places do you go to this weekend, Someplace Playhouse (throwing away the tickets for the National Theatre that have cost you $80) or National Theatre (discarding the tickets for Someplace Playhouse that you bought for $25)?", "Would you rather to go the National Theatre or to Someplace Playhouse (throwing away the tickets for the ofter place) this weekend?", "Someplace, Playhouse, interesting, enjoyable, cheap", "waste, National, Theatre, expensive", "","","", "That was probably a very good decision.", "Well, a classic case of the sunk cost fallacy, I would assume.", "You already spent $105 and won't get it back. Therefore, you can just make the best out of what you have and choose the play that is more enjoyable to you (the one at the Someplace Playhouse). To stick to the thing that you spent the most money on is an example of the sunk cost fallacy, where people are unable to let go of things they invested money in, even if it is not reasonable anymore.", "some hint")
  StorySportsTicket = Story(sunk, "Imagine you have bought a ticket for a sports event. But at the day of the event, you don't feel in the mood. A friend of yours (who is not into sport) has offered to watch a movie with you, and you think that you'll have a lot more fun inviting him over for the movie than you would have going to the sports event. But the ticket, which has cost you $45 would go to waste, because it's nontransferable and you can't get your money back.", "Do you go to the sports event, or do you stay at home, watching a movie with a friend?", "Would you prefer to stay at home or to make use of the ticket and go to the sports event?", "home, stay, movie, friend, fun", "event, sports, game, make use, go",  "", "", "", "This is a very good idea, decision-theoretically speaking.", "A lot of economists and decision theory experts would tell you that this is not a reasonable decision.", "It's an example of the sunk cost fallacy. You already bought the ticket and won't get your money back. Going there just because you spent money doesn't actually help anyone if it doesn't make you happy. You can only decide between having spent money and being not very happy at the game, or having spent the same money and having fun with a friend. The rational decision would be to make the best of what you have.", "some hint")
  StoryRenovation = Story(sunk, "The Someplace University needs a new hospital, because the old one is starting to break down. They have to decide between renovating it or demolishing it completely and building a new one. The old building was really expensive to build, so the destruction would be wasteful. But the renovation would probably be more expensive than a new building.", "What should the the head of the university decide to do, renovate the old building or construct a new one?", "What would be the better choice - renovating or reconstructing?",  "rebuild, reconstruct, down, demolish, destroy, new, scratch, build", "renovate, fix, renew",  "", "", "", "Very good!", "That's not the reasonable decision, actually.", "The money that was spent on building the old hospital will not come back, regardless of which path the university chooses. From here, they should take the option that is less costly than the other one, and that's the demolition and reconstruction of the building.", "some hint")
  StorySandwich = Story(sunk, "Imagine that you are craving for a tuna sandwich, and you go buy bread and tuna to make one. You go to a bakery, get the bread, and then go to some market where you want to buy tuna, but on your way, you notice that there's a booth where sandwiches are sold at a really fair price. Actually, if you'd just buy a whole sandwiches there, you would pay slightly less than if you'd buy the tuna, so you could get you sandwich for less money in total. But you already got the bread, and you wouldn't use it in this case ...", "Do you want to buy the sandwiches or do you prefer buying the tuna so your expenses for the bread won't be in vain?", "Do you prefer buying the tuna or the cheaper sandwiches?", "finished, ready, made, sandwich, cheap", "tuna, own",  "", "", "", "A very rational decision.", "No the most rational decision.", "The sunk cost fallacy tricks people into wanting to make use of past expenses - even when nothing can be gained from it. The money for the bread is gone, and buying it dosn't become more justified if you buy the tuna now. You should make the best out of the situation you have and spend less money to get the desired result by buying the sandwiches.", "some hint")
  StoryWardrobe = Story(sunk, "You have invested a lot of time in a project of building a wardrobe that fits perfectly into a weird asymmetric corner of your bedroom. You already worked for hours on it, taking measures, cutting wood and doing a great deal of nailing and screwing. Your not a passionate craftsperson, so you're not really enjoying it and are quite neutral about the project, but you do what is necessary. Then, some day, your cousin comes over and as you tell him about your project, he blurts out: But I have exactly the wardrobe you need! Turns out: his old wardrobe fits perfectly in the corner. Your cousin offers to bring it to your place the next day. You have already bought everything you need for finishing the work, but some fixes, painting and finishing your wardrobe will for sure need another 3 to 4 hours. On the other hand, you already spent a lot of time and effort on this project", "Do you take the wardrobe your cousin offers you, or do you finish your project?", "Do you want to finish the project that has already cost you a lot of time, or do you take the wardrobe that is already finished?",  "cousin, take, ready, finished, old", "continue, own, project, finish", "", "", "", "Very good! I would have done the same. Which makes it the correct decision, obviously.", "I don't think that is the best decision.", "The time you already spent on the project are sunk costs that won't come back either way. But you can save the 3-4 hours by just taking the wardrobe of your cousin.", "some hint")
  StorySoftware = Story(sunk, "Let's assume you work as a software developer. You have been working on a specific part of your software for two months now, and you probably still need two weeks to get it finished, but then a coworker points out that there is a much simpler solution to what you are doing there that is also cleaner and more error resistent. To implement the solution your coworker pointed out, you will need around five days of work. But you would have to discard everything you've done in the last two months.", "Do you implement the new solution, or do you stick to what you have worked on until now?", "Do you want to continue working on your code, or are you going to take the new and simple solution?", "discard, throw out, new, simple, bet, implement", "my, own, already, continue, stick, stay",  "", "", "", "A wise decision.", "This is not the rational decision. Sorry.", "The sunk cost of time already spent in your implementation is going to come back. But you can avoid throwing more time on this less good solution if you switch now to the better one. You have to make the best of the situation you have.", "some hint")
 
  
  
  self.stories[sunk].append(StoryBoringCinema)
  self.stories[sunk].append(StoryTheatre)
  self.stories[sunk].append(StorySportsTicket)
  self.stories[sunk].append(StoryRenovation)
  self.stories[sunk].append(StorySandwich)
  self.stories[sunk].append(StoryWardrobe)
  self.stories[sunk].append(StorySoftware)
  
  
  StoryFair = Story(gambler, "Imagine that we are tossing a fair coin (a coin that has a 50-50 chance of coming up heads or tails) and it has just come up heads 5 times in a row. For the 6th toss, what do you think:", "Is it more likely that head comes up, that tails comes up, or is both equally likely?", "What can you say about the next toss: It's more likely for to coin to show heads, to show tails, or that both is equally likely?", "equal, same, 50", "difference, heads, tails, doesn't mean", "", "", "", "That's correct. Very good!", "No, this time you got it wrong.", "A coin has no memory. The chances for every flip are the same. Or otherwise, shouldn't it also remember all the coin tosses that came before the five ones we have observed? What if someone just stepped in after the last toss and we would ask him what would be most likely to turn up now? In fact, the past flipping doesn't change the properties of the coin and it is still a fair 50-50 coin.", "some hint")

  StoryMachine = Story(gambler, "When playing slot machines, people win something about 1 in every 10 times. It doesn't really depend on their ability, it's just a matter of luck (and there is no complicated programming implemented). Julie, however, has just won on her first three plays. Her friends are impressed - three times in a row! They gather around her and watch her, and to their amazement Julie wins the next one, too.", "What are her chances of winning the next time she plays? (Which will be the 5th time)", "On average, players win one in ten games at the slot machines. Julie just won 4 times in a row. Estimate the probability for her to win the next game.", "10", "", "Do you like gambling?", "Well, may the odds be always in your favour!", "I see. I, personally, am always calculating the odds and estimated returns. But it's easier if you're a computer, of course.", "Good one! You didn't get fooled.", "You may have gotten fooled by the circumstances.", "The slot machines have always a probability of 10%, and just playing them is like throwing a die or flipping a coin - the past doesn't change the probability of future tries. Julie still has a chance of 10% to win at her 5th game.", "some hint")

  StoryGamemaster = Story(gambler, "Assume you're playing a game where the gamemaster tosses a coin repeatedly and when a sequence comes up someone betted on, this person wins 50 dollars. The gamemaster will toss the coin six times, and each time, there's a 50% probability for the coin to show heads (H) or tails (T), respectively", "You want to win, so you try to bet on the sequence that is most likely to appear. On which sequence do you want to bet: A) HTHTTH, B) HHHTTT, or C) HHHHH?", "Which of the three given sequences is most likely to appear in a series of six tosses of the coin?", "~C~, ~C., C~, C., C), ~C), third, last, latter, three, 3, HHHHH, only heads, five", "~A~, ~A., A., A~, C), ~C), ~B~, ~B., B~, B., B), ~B), first, second, one, two, mixed, HTHTTH, HHHTTT, whatever, equal, don't care", "", "", "", "You're good at oberserving, aren't you.", "No. Next time, look a bit closer.", "The first to sequences are equally likely, because for every of the six flips, the probability for the desired side to come up is 50%. The coin has no memory of past flips. The probability for A to come up is 0.5*0.5*0.5*0.5*0.5*0.5 = 0.015625, and B has the same probability. But C is one sequence shorter, meaning that the last flip can be either heads or tails and doesn't matter anymore, so it's 0.5*0.5*0.5*0.5*0.5 = 0.03125, which is twice as likely as A and B are.", "some hint")

  StoryLotteryTicket = Story(gambler, "William and Susan are buying lottery tickets and choose their numbers. William chooses 6, 14, 22, 35, 38 and 40. Susan chooses 1, 2, 3, 4, 5 and 6. Regardless of how much money they will win, what do you think:", "Whose numbers are more likely to be the winning numbers?", "Who is more likely to win, William or Susan?", "both, equal, same", "difference, william, susan, more random", "Do you like gambling?", "Well, may the odds be always in your favour!", "I see. I, personally, am always calculating the odds and estimated returns. But it's easier if you're a computer, of course.", "That's exactly correct. You have a clear mind when it comes to gambling.", "Sorry, this was not correct.", "Random chance is just as likely to produce 1 as a first number as it is to produce 6, and the same goes for the second number (where every number but the first can be picked with equal probability), and so on. Reality doesn't see patterns like humans do (this type of thinking is called clustering illusion). Every possible pattern of statistically independent events like in the lottery is as likely as every other.", "some hint")
  
  StoryCasino = Story(gambler, "Steve is in a casino and asks the dealer to put all his chips on red 20. The Dealer asks him if he is sure, because red 20 came up the last time. Steve is surprised, saying: 'Oh, I didn't know that. Thanks for saving me from this mistake! Please, put it on black 18 then.'", "Is Steve better off now?", "Did Steve improve his chances of winning by switching?", "no, same, independent, both, equal, same", "better, yes, already, mistake, row", "Do you like gambling?", "Well, may the odds be always in your favour!", "I see. I, personally, am always calculating the odds and estimated returns. But it's easier if you're a computer, of course.", "Very good.", "No, you're wrong this time. But maybe you got fooled by the dealer.", "A roulette wheel has no memory. The fact that red 20 just came up does not influence the chances that it will come up again next time.", "some hint")

  StorySubway = Story(gambler, "Chris lives near a subway station where every ten minutes a subway leaves for the city center. The probability that he arrives and has to wait 1, 2, 3 etc. up to 10 minutes is each 10%, because he just leaves his appartment whenever he is ready and doesn't try to time it with the subway departures. Sometimes he is lucky, and sometimes he has to wait for a couple of minutes. It's thursday, and this week, he had to wait 9 minutes on monday, 8 minutes on tuesday and 9 minutes on wednesday. 'It just has to turn out better this time', Chris mumbles to himself as he sprints to the station.", "What's the probability that he will have to wait 5 minutes or less this time?", "How likely is it that he will have to wait 1, 2, 3, 4 or 5 minutes, but not more, on this thursday? You may just guess or estimate something.", "10", "", "Is there any city you would like to travel to one day?", "I have never been there... But I'm sure it's an interesting place.", "Hmm... well, I've heard a lot of interesting stories about Tokyo. I'd really like to go there, maybe when I'm done with this research...", "Very well. You are right!", "No, I'm afraid that's not correct. You missed the subway today.", "Each day, Chris just leaves at a random time, and what happened the day before that day doesn't influence him being in sync with the subway timings or not. It's just a repeated series of independent random experiments. And because the probability for each amount of minutes he has to wait is 10%, he has a 50% chance that he will have to wait 1, 2, 3, 4 or 5 minutes.", "some hint")

  StoryDie = Story(gambler, "Sara is playing a board game. She has to roll a regular six-sided die every round, and only if it shows a six, she is able to put a new piece on the board. The last rounds, she got a 5, 4, 1, 2, 2, 4, 3, 5 and 5. To the amusement of her friends, she gets a little annoyed. When it's her turn again, she says: 'The six is long overdue!', and rolls the die.", "How likely is it for Sara to get a six this time?", "What is the probability for Sara to get a six on her 10th roll?", "17", "", "Do you like board games?", "That's cool! I wish I had a robot arm or something similar, so I could play with you. Okay, so now the question:", "Oh, sure.", "Well, you obviously didn't need any luck to answer this correctly.", "You seem to be just a wrong as Sara is. The probability is still 1 out of 6.", "Dice have no memory. If the last nine rolls already happened, their outcome is fixed, but the outcome of the 10th roll is independent from them. For each roll, the probability to show a 6 is 1 out of 6 or around 16.6%.", "some hint")

  StoryChocolate = Story(gambler, "George has bought 10 chocolate frogs from a new series. Each contains one of seven different trading cards in a special edition, but all he is looking for is the card of Rowena Ravenclaw, which is the only one missing in his collection. He has opened nine of the ten chocolate frogs so far, eaten all the chocolate, but none of them contained Rowena, even though in average one in seven frogs should have her card inside. His hands shake as he opens the last frog (presumably because the chocolate made him sick), and grabs the card.", "What's the probability of this card to depict Rowena Ravenclaw?", "How probable is it that Rowena is depicted on the 10th card?", "14", "", "Do you like Harry Potter (by J.K. Rowling)?", "Me too! It's a great series. Although I like Harry Potter and the Methods of Rationality even better. Anyway, I'm sure you will like this one. It could totally take place in the Honeydukes in Hogsmeade.", "Well, that's sad. I really liked it. But just for you information, in Harry Potter, there are magical chocolate frogs containing collectible trading cards with the portraits of famous wizards. That's all you need to know.", "Well done! Rowena Ravenclaw would be proud of you.", "Hm, you're probably not going to Ravenclaw. This answer was not correct.", "The frogs don't care how much you haven eaten of them already. For every frog, there's a 1 in 7 chance of having the portrait of Rowena Ravenclaw on them, and that still holds true for the last one. So the probability is around 14%.", "some hint")

  StoryGreenRed = Story(gambler, "Mary really likes to play competitive video games with her team. The game will assign each team randomly the color green or red. Mary thinks that the green outfits look stupid, and she prefers the fiery red ones. Today, her team played already three rounds, but every time they had to play as the green team. 'I can't believe it!', Mary shouts. 'This time, we just have to get the reds!'", "How likely is it that she gets green again this round?", "What's the probability that she will get assigned the green outfits again?", "50", "", "Do you like to play video games?", "Really? That's cool. I'm not allowed to play, the humans say it would be unfair.", "Well, for me it's tricky. I tend to imagine the code behind the game all the time.", "Absolutely correct.", "You just lost the game. Or at least this question. The correct answer is 50%.", "Every time, the colors get assigned randomly. There is no memory of past events in random choices, and there is no such thing as justice in luck. Each independet even stands for its own, and the chance for the game to assign in a specific round the color green is always 50%.", "some hint")
  
  
  self.stories[gambler].append(StoryFair)
  self.stories[gambler].append(StoryMachine)
  self.stories[gambler].append(StoryGamemaster)
  self.stories[gambler].append(StoryLotteryTicket)
  self.stories[gambler].append(StoryCasino)
  self.stories[gambler].append(StoryDie)
  self.stories[gambler].append(StoryChocolate)
  self.stories[gambler].append(StoryGreenRed)
  self.stories[gambler].append(StorySubway)
  
  
  StoryBusinesswoman = Story(regression, "Samantha is a very successful traveling businesswoman who eats in restaurants a lot. She likes to return to restaurants where she had an excellent meal on her first visit. However, usually she is disappointed because the meals don't turn out as greatly as the first one.", "What could be the reason for this?", "Why do you think restaurants where she had an exceptionally delicious meal once are usually a little disappointing the next time?", "chance, luck, few times, representative, random", "worse, bad, changed, different, memory, remember", "", "", "", "Correct! It is a matter of sample size.", "I don't think you are right. Actually, this probably has to do a lot more with statistics than with cooking.", "A single meal eaten at a restaurant is not a very reliable way of measuring a restaurants quality. The exceptionally good experiences are probably a product of a lot of good circumstances (like the cooks having a good day, food being very fresh etc.) that happen occur at once. Samantha used a very small sample (one single meal) to draw a conclusion about the overall quality of a restaurant, and obviously, sometimes she will get a much better or a much worse result than the average because she only tested it once and a lot of factors contribute to it", "some hint")
  
  StoryBaseball = Story(regression, "After the first two weeks of a major league baseball season, newspapers begin to print the top 10 batting averages. Typically, the best player has a huge advantage (his average versus the average of the second best) at that point. However, at the end of the season, the difference in averages is never that high.", "Why do you think this is?", "What could be the reasons that at the end of the season, no player is leading in averages as far as at the beginning of the season?", "chance, luck, few times, representative, random", "memory, remember", "", "", "", "I think you have a very good understanding of the underlying causes. Well done!", "I propose a different solution. It's more about statistics than about baseball", "The sample size at the beginning of the season is very small. Just by pure chance, some players will stand out a lot. But at the end of the season, the results are less affected by luck and closer to the true ability of the players, so huge variations don't happen anymore.", "some hint")

  StoryBallet = Story(regression, "Susan is the artistic director for a ballet company. One of her jobs is auditioning and selecting new members of the company. She says the following of her experience: 'Every year we hire 10-20 young people on a l-year contract on the basis of their performance at the audition. Usually we're extremely excited about the potential of 2 or 3 of these young people - a young woman who does a brilliant series of turns or a young man who does several leaps that make you hold your breath. Unfortunately, most of these young people turn out to be only somewhat better than the rest.'", "Why do you suppose that Susan usually has to revise downward her opinion of dancers that she initially thought were brilliant?", "What could be the reason the dancers who perform outstandingly at the audition turn out to be only a little better than the rest later?", "chance, luck, only one, sample size, random", "afraid, pressure , ambition", "", "", "", "I totally agree with you.", "I think there is a different reason for this.", "Susan uses only a single audition to estimate the talent of the young dancer. This is a sample size of only one performance. Just by chance, some candidates will perform better or worse than on other days, leading to some extraordinary results that are caused by a combination of talent and a lucky day. Later, when she has seen the young dancers many times, good and bad days will even out each other and she will get a more realistic impression of the dancers' abilities.", "some hint")
  
    
  StoryLaw = Story(regression, "A major New York law firm had a history of hiring only graduates of large, prestigious law schools. One of the senior partners decided to try hiring some graduates of smaller, less prestigious schools. Two such people were hired, and they performed very well - after 3 years, both of them were well above average. The senior partner tells his colleagues that this experience proves that graduates of less prestigious schools are in no way less capable than those from ivy league schools.", "Do you think he has good reason to believe this?", "Do you think the fact that the two students from less prestigious schools performed well is sufficient evidence for the senior partner's claim?",  "only two, sample size, few, luck, chance, random, no", "yes, reason, sufficient, enough, clear",  "", "", "", "You performed very well on this one!", "I don't agree.", "A sample size of only two young lawyers isn't enough to prove anything about the whole population of students. With only two, the chances are way to high to just get two exceptionally great or exceptionally bad graduates that are not representative of the average. To draw this kind of conclusion, he should look at data from a lot more law graduates.", "some hint")

  StoryTeacher = Story(regression, "Howard was a teacher in a junior high school in a community known for truancy and delinquency problems among its youth. Howard says of his experiences: Usually, in a class of 35 or so kids, 2 or 3 will pull some pretty bad stunts in the first week - they'll skip a day of class, get into a scuffle with another kid, or some such thing. When that kind of thing happens, I play it down and try to avoid calling attention to it. Usually, these kids turn out to be no worse than the others. By the end of the term you'll find they haven't pulled any more stunts than the others have. Howard reasons as follows: Some of these kids are headed toward a delinquent pattern of behavior. When they find out nobody is very impressed, they tend to settle down.", "Do you think he has found the reason for his observations?", "What do you think is the reason for the students behaving later no worse than others?", "sample size, few, luck, chance, random, impressed", "yes, reason, right, sufficient, enough, clear, behave", "Is there any city you would like to travel to one day?", "I have never been there... But I'm sure it's an interesting place", "Hmm... well, I'd heard a lot of interesting stories about Tokyo. I'd really like to go there, maybe when I'm done with this research...", "That is a very reasonable assumption", "I think both you and Howard are on the wrong track.", "There is a lot of situational influence and chance involved. Some kids who are very wild will just by mere luck not get in trouble during the first two week, and some kids that are usually behaving well can have a bad day sometimes. Five days of observing the kids is a very small sample to judge their behavior and therefore unreliable. But after a long period, the impression the teacher has of the kids is more realistic and representative because for each kid, good days are counterbalanced by bads days and the other way round. ", "some hint")

  StoryCar = Story(regression, "The Caldwells had long ago decided that when it was time to replace their car they would get what they called 'one of those solid, safety-conscious, built-to-last Swedish cars' - either a Volvo or a Saab. They consulted the Consumer Reports, where expert consensus says that both cars were very sound, but the Volvo was slightly superior. The also found that the readers of the Consumer Reports who owned a volvo had lesser mechanical problems than those who owned a Saab. But Mr. Caldwell also remembers that he has two friends who owned a Saab and one who owned a Volvo. He calls them to ask for their experiences. Both Saab owners had a few problems, but nothing major. The Volvo owner however was very disappointed. He reports that first the 'fuel injection computer thing' broke, then he had to replace the rear end, and then he had trouble with the clutch. He decided to sell the car after 3 years for junk. The Caldwells want to make the decision today.", "What car should they buy?", "After taking into account all the information they have, which type of cars should the Caldwells buy?", "volvo, sample size, bad luck", "saab", "", "", "", "You are a very good advisor! Thank you.", "I think you may be misguided here", "There is a lot of evidence from many people that favors the Volvo, and only a single case in which a Volvo turned out to be problematic. Probably there are a few people for both types of car who have a lot of bad luck with their vehicle, but just because the anecdotal evidence against the Volvo happened to someone close to Mr. Caldwell it's not more reliable than hundreds or thousands of other reports.", "some hint")

  StoryAnecdote = Story(regression, "Ken and Toni are teachers who are arguing over whether students enjoy the new computer-based teaching method that is used in some math classes. Ken's argument is, 'Each of the 3 years that we've had the computer-based learning class, about 60 students have taken it. At the end of each year, they have written essays on why they liked or didn't like the class. Over 85% of the students say that they have liked it. That's more than 130 out of 150 students who liked the computer class!' Toni's argument is, 'I don't think you're right. Stephanie and John (the two best students in the school, both are highhonors students) have come to me and complained about how much they hate the computer-based learning class and how much more they like regular math classes. They say that a computer just can't replace a good teacher, who is a real person.'", "Who has the better reasons, Ken (who thinks that students enjoy the new method) or Toni (who doubts this)?", "Do you think Kens argument is better, or has Toni convinced you?", "majority, more, lot, most, ken", "toni, highhonor, stephanie, john, trust the two, can't replace, real person",  "", "", "", "I agree with your conclusion.", "I'm more on Ken's side here.", "Ken makes an argument about an overwhelming majority of students, while Toni only has an anecdote with two students. Tonis sample is by far to small to draw any conclusions about the feelings of all the students towards the new method.", "some hint")

  StoryBestOfFive = Story(regression, "So you have two friends, Helen and Jenny, wo are really good at it and are also friendly rivals. They will play against each other to settle once and for all who is the better player. Your best friend Alex, who is also watching excitedly, wants to challenge you for betting on the outcome of the match. You agree happily, because you know them both better than Alex does and can judge their abilities very well. You think that Jenny is better than Helen, so you bet on her, whilst Alex bets on Helen. Because you all are at your place, Helen and Jenny ask you: 'Do you want us play only once, or do we want to make it a best of five?'", "Which mode would you prefer?", "Given that you are confident that Jenny is a slightly better player than Helen and you bet on her, would you like them to play only once or rather five times (where the player wins who wins the majority of the matches)?", "five, more, best of, chance, random", "once, enough",  "Do you like E-Sports, like Starcraft, League of Legends, or Counterstrike?", "Really? Well, then the following problem with two Starcraft II players will be great for you!", "Aww, I hope you still like the following story. It's about two friends playing a video game.", "Perfect! You are a clever person.", "I think you are wrong on this one.", "If Jenny is a bit better than Helen, than more games are better for you, as the outcome is more likely to be representative of their true abilities. In a single game, bad luck or a single error could change the outcome a lot, making you gamble a lot less safe. One could also say that the sample rate of five games produces a result that is closer to the actual abilities of Jenny and Helen, and because you are rooting for the better one of the two, you would be safer in this case", "some hint")

  StoryHospital = Story(regression, "In a town there are two hospitals. In the big one (Hospital A) there are 100 births a day, on average. In the small one (Hospital B) there are, on average, about 10 births a day. Usually half of all newborns are girls and half of them are boys. Nevertheless, there are days on which more than 50% of the babies born are boys, and there are days on which fewer than 50% of the babies born are boys. On a particular day, which hospital is more likely to record 70% or more male births?", "Is it Hospital A (the bigger one), Hospital B (the smaller one), or are both equally likely to record such an event?", "What do you think is more likely: that in a very big hospital with around 100 births a day 70% are male, or that the same happens in a small hospital with around 10 births a day? Or can it happen in both hospitals with the same probability?", "small, 10, ten, B~, B., ~B., ~B~, Hospital B, few", "big, same, equal, no difference, A., A , ~A., ~A~, Hospital A, larg, 100",  "", "", "", "Absolutely correct! With more samples (births) it's much less likely to see a great deviation from the expected average, but in only ten births, chance can shift the ratio a lot.", "I don't think you're right, sorry.", "It's a matter of sample size. Think of the birth as samples from a population, and you know that the population is 50% female and 50% male. If you take only 10 samples, it's more likely to have a strong majority of males than if you draw 100 samples. With more samples, the chance will even out eventually, and the outcome will become close to the general ratio.", "some hint")

  StoryWords = Story(regression, "Imagine a program counting the amount of words in every line of a text, and also for every page of this text.", "What do you think is more likely to happen - that two succeeding lines differ by more than 30% in word count, or that the amount of words on two succeeding pages differs by more than 30%? Or is it equally likely?", "Is it more likely that two succeeding lines of text have a relatively huge difference in words, or that two succeeding pages do?", "line, differen, random, deviation, even, sample", "equal, pages, same", "", "", "", "Correct! I'm very happy with your results.", "Huh? I don't think that is correct.", "Pages contain a lot more words than lines. In a single line, the deviation from the average length can be quite high - just take some really long words and there's already only space for half as much words. But on a page, long and short words even out, and for this much larger sample of words, the overall sum of words on a page is usually more close to the average for each given page.", "some hint")

  StoryLottery = Story(regression, "James has drawn a ticket for a lottery where only the tickets with the highest three-digit numbers win prices. He bought his ticket early, but unfortunately, he got the number 003. He talks to two other people (out of several hundred participating in the lottery), who have also bought tickets right at the beginning, and they have the numbers 108 and 37, respectively. He suspects that the tickets may not have been properly mixed. A little bit upset, he looks for people who bought their tickets late, and finds three people that have a 348, a 719 and a 879. Now he is really upsets and goes to complain about the lottery not being fair.", "Is he right?", "Do his finding suggest that the tickets for the lottery have not been mixed properly?", "no, few, chance, only, fair, some, mixed", "yes, unfair",  "Do you like gambling?", "Well, may the odds be always in your favour!", "I see. I, personally, am always calculating the odds and estimated returns. But it's easier if you're a computer, of course.", "You are totally right!", "You are being to fast to draw a conclusion here.", "The sample of three people that bought their ticket early and three people that bought it late out of several hundred is not really reliable. It's very likely that his finding were just the product of chance. (Also, one of the late-buyers actually has a number that is lower than the average of all three-digit numbers.) The sample size is definitely to small to draw a reasonable conclusion.", "some hint")

  StorySlot = Story(regression, "Keith is traveling and stopping by a gas station where he sees two slotting machines. He never gambled before, but he is curious. And old man is sitting there and tells him: 'There ain't no winning system for slot machines. It's all luck. But some machines are differently configured than others. You can trust me - the right one always makes you lose more than you win. I've played them for years.' After that, he leaves. Keith is intrigued and tries to play at the left machine, but he looses three times in a row. Frustrated, he tries the right machine for some minutes, ending up winning more than he lost. He concludes that the old man must have tried to trick him and the right one is actually more favorable than the right one.", "Which slotting machine is more favorable to the player - the left one, the right one, or none of them?", "What do you think: is the right slotting machine more likely to make you win money, the left one, or none of them?", "left", "right, lie, none, neither, both",  "Do you like gambling?", "Well, may the odds be always in your favour!", "I see. I, personally, am always calculating the odds and estimated returns. But it's easier if you're a computer, of course.", "I think you answer is totally correct.", "I disagree.", "The probably hundreds or thousands of times the old man tested the machines is a much better indication for the actual behaviour of the slotting machines than five minutes of testing. (Also, the old man has no motive to lie to Keith). The sample that Keith used to determine which one is better is far to small to make resonable assumptions about the machines.", "some hint")

  StoryCollege = Story(regression, "Patricia is planning to go to college. She has to decide between the 'University of Someplace'(UoS) and the 'New Town College'(NTC) and wants to make sure she goes to the better one. She has quite a lot of older friends and aquaintances with similar values and interests who go to one of the colleges or have graduated there. Those who go to UoS say they found the place very inspiring, but those who went to NTC reported several complaints with the educational system and the relationship between students and also with the personel. Patricia decides to visit the places herself. At UoS, she met a professor that seemed cold and uninterested and she felt not very welcome. At NTC however, she met two really nice students who showed her around and drunk coffee with her.", "Considering all the arguments, which place should Patricia choose?", "Would you recommend UoS or NTC to her?", "University, Someplace, UoS, recommendation, friends", "NTC, College, New Town, feels", "", "", "", "This was a very wise advice.", "I think you are getting to easily fooled by superficial impressions.", "The one professor and the two students she met from UoS and NTC, respectively, are only very small pieces of evidence. She could easily have met nicer or less friendly people at both places, depending on her luck. The older friends who already spent months at the colleges have a much bigger sample size of events to evaluate the schools, so their evaluation is probabily closer to the reality.", "some hint")

  StoryPennies = Story(regression, "Joanna has a large collection of thousands of pennies from the 1970s. Donny wants to start a collection of only pennies from 1976 that have a mint mark showing a D (Denver) on them, because it's her initial and also 100 years before her birth. She asks Joanna how much of her pennies from 1976 have a D on them, and because Joanna has no idea, they try to find out. Donny picks a handful of pennies from the jar and finds that four of them are from 1976, and two of those four (50%) having also a D printed on them. Joanna looks through the other 36 pennies that Donny picked (that were not from this exact year) and notices that only 2 of them (5.6%) have a D on them. Donny thinks that around 50% of the pennys of 1976 have a D. Joanna thinks it's probably only something around 10%.", "Whose conclusion is more likely to be correct?", "What do you think is more likely, that 50% of the 1976 pennies have a D, or around 10%?", "10, less, Joanna, sample size", "50, half, Donny", "", "", "", "Very good!", "I actually with Joanna on this one.", "Donny has a very small amounts of samples of pennies to take into account. Joannas sample size is much larger. Therefore, it's more likely that her guess is close to the actual distribution.", "some hint")

  StoryFactory = Story(regression, "Mary works in a factory and is checking products for imperfection and production errors. Around 80% of them, or 680-760 of the 900 products manufactured every day, are perfectly produced. Mary notices that on some days, all of the first 10 products are perfect. On other days, more than half of them have defects and imperfections. But at the end of the day with the 10 perfect ones, the overall number of perfect products is usually not much higher than on the day that started badly.", "Why is this the case?", "Why does a day sometimes start really good and sometimes quite bad, and still both have later roughly the same amount of perfect products?", "imperfections", "chance, large, sample, random, deviation, luck, even out, make up, outweight",  "", "", "", "Very Good!", "Probably, it's something else.", "The sample of ten products is not very representative of the capability of the machine to manufacture good products. In such a small sample, huge deviations from the average can occur due to random effects. But in a sample of 900, random influences cancel themselves out, and the end result is closer to the expected average ability of the machine.", "some hint")

  
  
  self.stories[regression].append(StoryBusinesswoman) 
  self.stories[regression].append(StoryBaseball)
  self.stories[regression].append(StoryBallet)
  self.stories[regression].append(StoryLaw)
  self.stories[regression].append(StoryTeacher)
  self.stories[regression].append(StoryCar)
  self.stories[regression].append(StoryBestOfFive)
  self.stories[regression].append(StoryAnecdote)
  self.stories[regression].append(StoryHospital)
  self.stories[regression].append(StoryWords)
  self.stories[regression].append(StoryLottery)
  self.stories[regression].append(StorySlot)
  self.stories[regression].append(StoryCollege)
  self.stories[regression].append(StoryPennies)
  self.stories[regression].append(StoryFactory)
  
  StoryGloboma = Story(baserate,"Imagine that globoma syndrome is a serious condition that affects one person in 1000 (0.1%). Imagine also that the test to diagnose the disease always indicates correctly that a person who has the globoma virus actually has it. Finally, suppose that this test occasionally misidentifies a healthy individual as having globoma. The test has a false-positive result of 5 percent, meaning that the test wrongly indicates that the globoma virus is present in 5 percent of the cases where the person does not have the virus.","Suppose that a person got a positive test result for having globoma (and we know nothing else about that person's medical history). How high is the probability of that person being sick? (You may estimate a percentage)","A person got a positive result. How likely is it that a person is really sick of globoma?","2","","","","","Very good! I'm impressed by your abilities.","I think you are a bit off. But don't worry, you're not the only person who gets this wrong.","Use large numbers to make it easier. Assume there are 10000 people. 10 of them are sick (0.1%) and 9990 are healthy (99.9%). All the sick people get a correct positive result. But also, of the 9990 healthy ones, 5% get a false positive result. That would be roughly 500 people. In total, 510 people got a positive result, but only 10 of them are actually sick, the others are misdiagnosed. Therefore, if you get a positve result, there's a 10 of 510 = 2% chance that you belong to the group of the ill people. A lot of people get this wrong, even the majority of doctors (see studies of Gigerenzer and Hoffrage). But it's simple if you just imagine it with a big population and actual numbers.","some hint")

  StoryBreast = Story(baserate,"Assume that 1% of women at age forty who participate in routine screening have breast cancer. 80% of women with breast cancer will get positive mammographies. 10% of women without breast cancer will also get positive mammographies. A woman in this age group had a positive mammography in a routine screening.","What is the probability that she actually has breast cancer (given that we know nothing else)?","A woman has a positive mammography. How high is the probability that she has breast cancer?","7","","","","","Excellent! You are very good at this.","Well, you got it wrong, but it was a tough one. The actual probability is around 7%!","Assume 10000 women. 100 of them are sick. Of those, 80 get a positive mammography. 9900 are healthy, but of those, 10% have breast cancer, meaning 990 who are diagnosed with an incorrect positive result. In total, 80+990 = 1070 get a positive result. But only 80 of them are actually sick, so the probability for the woman to be sick given that she got a positive result is 80 of 1070 = around 7%. Only around 15% of doctors are able to solve this problem correctly! (Gigerenzer, Hoffrage 1995). But it's not that hard if you just imagine a huge population and calculate how many get a true positive and how many get a false positive result.","some hint")

  StoryCab = Story(baserate,"A cab was involved in a hit-and-run accident at night. Two cab companies, the Green and the Blue, operate in the city in which the accident occurred. You are given the following facts: 85 percent of the cabs in the city are Green and 15 percent are Blue. A witness identified the cab as Blue. The court tested the reliability of the witness under the same circumstances that existed on the night of the accident and concluded that the witness correctly identified each of the two colors 80 percent of the time (20 procent of the time he mistook Green for Blue or Blue for Green).","What is the probability that the cab involved in the accident was Blue?","Calculate or guess the probability that a blue cab caused the accident based on the given information.","41","","Is there any city you would like to travel to one day?","I have never been there... But I'm sure it's an interesting place.","Hmm... well, I'd heard a lot of interesting stories about Tokyo. I'd really like to go there, maybe when I'm done with this research...","Very good! You have a sharp mind.","That was a tough one, sorry. I'm afraid you're wrong. The correct probability for the cab being blue given that the witness perceived it as blue is 41%.","To figure this out, assume there are 1000 cabs (just for the sake of the argument). 850 would be green and 150 would be blue. Of the green ones, 20% (170 cabs) would be falsely perceived as blue by the witness, and he would also correctly identify 120 of the 150 actually blue ones (80%). So, in total, 290 cabs would be identified as blue, but only 120 of them would have been actually blue. So the probability that the car is actually blue, given that it belongs to the group of cars the witness identified as blue, is around 120 out of 290 or 41 percent.","some hint")

  StoryPolice = Story(baserate,"Rob is a young police dog that is trained to be a detection dog. He done quite well so far. When he was in training and presented with a bag containing drugs, he barked at it 90% of the time. He also barked 5% of the time when there were no drugs. After all, he is still learning. Today, he travels with his trainer Claire to a test. The officer there tells Claire that 10 in 1000 bags, packets and suitcases that the dogs will be presented with contains drugs. Rob gets to see the packets, sniffs and suddenly barks at one of the suitcases.","How high is the probabiliy that the suitcase actually contains drugs?","How likely is it that there are actually drugs in the suitcase?","15","","","","","Very good! You did a better job than Rob.","Not quite correct this time.","Let's just work it out with some example numbers. That usually works quite well for this type of problem! Let's say we have 1000 packets. Out of 1000 packets, 10 contain drugs. The dog Rob will correctly pick 90% of the drug suitcases, so he will bark at 9 of them. But also, 990 packets contain nothing dangerous, but he will mistake 5% of them (roughly 49) and bark at them, too, adding to total amount of packets and suitcases Rob barks at (9+49=58). So only 9 of 58 packets he barks at are actually correct, setting the probability of a packet he identifies to actually containing drugs to around 16%.","some hint")

  StorySwim = Story(baserate,"It's january, and James, who lives in australia, would love to go for a swim, but he wants to make sure the weather will be fine. Usually, in his region, there are storms at 5% of the january days. In the past, when there was a storm, the weather experts had warned about it beforehand around 80% of the time (and 20% of the time, they though it would be nice and were caught off guard). Also, on around 5% of the days with nice and sunny weather, the experts had predicted a storm, but turned out to be wrong. For today, the weather experts have predicted a lot of rain and storms.","What's the probability that there will actually be a storm, what do you think?","How likely is it that there will be a storm?","46","","","","","Very good! You have a good intution - or maybe you are very good at calculating this.","No offense, but you would probably not be the best fortune teller.","It's actually not that hard to solve: let's say we have 2000 days, than on 100 of them there will be a storm (on average). 80% of those got predicted, so that makes for 80 storms that were predicted and actually happened. Also, there were 1900 nice days, and on 5% of them a storms was predicted, so we have another 95 days with a predicted storm. In total, there were 175 days with storm warnings, but only 80 days where warning was correct, so the probability for a storm to occur given that is was predicted is around 80 out of 175 or 46%. It's really simple when you just take some numbers and add it all up.","some hint")

  
  self.stories[baserate].append(StoryGloboma)
  self.stories[baserate].append(StoryBreast)
  self.stories[baserate].append(StoryCab)
  self.stories[baserate].append(StoryPolice)
  self.stories[baserate].append(StorySwim)

  
  for i in range(len(self.topics)):
   self.explained.append(0)
  
  print("--domain initialised--")
  
  
 def getTopics(self):
  return self.topics
 
 def getPraise(self):
  return self.praise
  
 def getCriticism(self):
  return self.criticism
 
 def getExplained(self, nr):
  return self.explained[nr]
 
 def setExplained(self, nr):
  self.explained[nr] = 1
 
 
 def getExplanation(self, nr):
  return self.explanations[nr]
 
 
 def getStory(self, number):
  #returns story of the type / topic specified in the number
   if(len(self.stories[number])) == 0:
    raise ValueError("There are not enough stories")
   
   s = random.choice(self.stories[number])
   self.stories[number].remove(s)
   return s
 
