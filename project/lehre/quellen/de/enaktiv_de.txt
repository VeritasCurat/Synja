lesson: programm_structure
"programm_structure_main":::"Lass uns eine Main-Methode schreiben.":::"static void main(String a[]){}":::{"public"::"static"::"void"::" main"::"("::"String[]"::" a"::")"::"{}"}
"programm_structure_import":::"Lass uns eine richtige Importdeklaration schreiben.":::"import java.*;":::{import"::"java"::"."::"*"::";"}
"programm_structure_packages":::"Lass uns eine richtige Paketdeklaration schreiben.":::"package src;":::{"package"::"src"::";"}
lesson: basics
"comments":::"Lass uns einen einzeiligen Kommentar schreiben.":::"//COMMENTS":::{"//"::"COMMENTS"}
"literals":::"Lass uns ein paar richtige Literale schreiben.":::{""test""::""name""::""var""}
"integer_literals":::"Lass uns ein paar richtige Integerliterale schreiben.":::{"0b0101"::"12"::"032532"::"0xAA"}
"floating-point_literals":::"Lass uns ein paar richtige Gleitkommazahlliterale schreiben.":::{"1.0F"::"1.0D"::".1"}
"character_literals":::"Lass uns ein paar richtige character-Literale schreiben.”:::{“’c’”::”’1’”::”’\n’”}
"string_literals":::"Lass uns ein paar richtige Stringliterale schreiben.":::{""String""::"12A"::"happy"}
"boolean_literals":::"Lass uns ein paar richtige bool'sche Literale schreiben.":::{"true"::"false"}
"null_literal":::"Lass uns den richtigen leeren Wert schreiben.":::{"null"}
"keywords":::"Lass uns ein paar richtige Schlüsselwörter schreiben.”:::{“char"::"for"::"abstract"::"static"::"return"}
"identifiers":::"Lass uns ein paar richtige Bezeichner schreiben.":::{""id""::"_var"::"id1"}
"types":::"Lass uns ein paar richtige Typen schreiben.":::{"float"::"int"::"String"::"boolean"}
"variable_definition":::"Lass uns eine Stringvariable mit dem Namen y erstellen.":::"String y;":::{"String"::"y"::";"}
"variable_definition_initialization":::"Lass uns eine Stringvariable mit dem Namen y erstellen und ihr den Wert 3 zuweisen.":::"int y = 3;":::{"int"::"y"::"="::"3"::";"}
"variable_access":::"Lass uns auf die Variable s zugreifen, indem wir ihren Namen ausschreiben.":::"System.out.println(s);":::{"s"}
"variable_reassignment":::"Lass uns der Floatvariable den Wert 3.14 zuweisen.":::"f = 3.14;":::{"f"::"="::"3.14"::";"}
lesson: arrays
"array_definition":::Lass uns ein String Array definieren.":::"String  a[];":::{"String"::" a"::"[]"::";"}
"array_declaration":::"Lass uns ein char Array mit drei Elementen deklarieren.":::"char[] a = new char[3];":::{"char"::"[]"::" a"::"="::"new"::" char"::"[3]"::";"}
"array_definition_initialization":::Lass uns ein int Array definieren und mit den Werten 1 und 2 initialisieren.":::"int a[] = {1,2};":::{"int"::" a"::"[]"::"="::"{"::"1"::","::"2"::"}"::";"}
"array_access":::"Lass uns auf das Element mit dem Index 0 eines Arrays zugreifen.":::"System.out.println( a[0]);":::{" a"::"["::"0"::"]"}
"array_reassignment":::"Lass uns das erste Element eines Arrays auf den Wert 3 neu zuweisen.":::"array[0] = 3;":::{"array"::"[0]"::"="::"3"::";"}
"multidim_array_definition":::"Lass uns ein zweidimensionales String-Array definieren.":::"String  a[][];":::{"String"::"  a"::"[]"::"[]"::";"}
"multidim_array_declaration":::"Lass uns ein String-Array definieren, welches in der ersten Dimension 5 und in der zweiten 10 Elemente hat.":::"int  a[][] = new int[5][10];":::{"int"::"  a"::"[]"::"[]"::"="::"new"::" int"::"[5]"::"[10]"}
"multidim_array_access":::"Lass uns auf das erste Element eines zweidimensionalen Arrays zugreifen.":::"System.out.println( a[0][0]);":::{" a"::"[0]"::"[0]"}
"multidim_array_reassignment":::"Lass uns das dritte Element eines mehrdimensionalen Arrays neudefinieren.":::"a[1][0] = 3;":::{"a"::"[1]"::"[0]"::"="::"3"::";"}
lesson: operators
"arithmetic_operators":::"Lass uns 3 und 5 mithilfe des + Operators addieren.":::"3 + 5":::{"3"::"+"::"5"}
"operators_prefix":::"Lass uns die Variable b mithilfe des prefix Operators ++ inkrementieren.":::"++b;":::{"++"::"b"::";"}
"operators_postfix":::"Lass uns die Variable q mithilfe des postfix Operators -- dekrementieren.":::"q--;":::{"q"::"--"::";"}
"comparison_operators":::"Lass uns 6 und 9 mithilfe des < Operators vergleichen.":::{"6"::"<"::"9"}
"logic_operators":::"Lass uns den || nutzen.":::"true || false":::{"true"::" || "::"false"}
"bitwise_operators":::"Lass uns den bitshift Operator << auf die Variable var anwenden.":::"var=var<<1;":::{"var"::"="::"var"::"<<"::"1"::";"}
"assignment_operators":::"Lass uns ", World!" auf die Stringvariable a = "Hello" mithilfe des += Operators aufkonkatenieren.":::"a +=", World!";":::{"a"::"+="::"", World!""::";"}
lesson: statements
"expressions":::"Lass uns einen Ausdruck entwickeln, welcher die Variable var auf den Faktor 2 vergrößert, indem sie um eine Position nach links bitweise verschoben wird. Lass uns dann 3 darauf addieren.":::"(var<<1) + 3":::{"("::"var"::"<<"::"1"::")"::"+"::"3"}
"statements":::"Lass uns eine Variable deklarieren.":::"int a = ++b;":::{"int"::" a"::"="++"::"b"::";"}
"code_blocks":::"Lass uns einen leeren Codeblock schreiben.":::"{}":::{"{"::"}"}
lesson: controll_structures
"boolean_expression":::"Lass uns einen bool'schen Ausdruck schreiben, der wahr ist.":::"1 < 3":::{"1"::"<"::"3"}
"if":::"Lass uns eine if-Anweisung schreiben.":::"if(true);"}:::{"if"::"("::"true"::")"::";"}
"switch":::"Lass uns eine switch-Anweisung schreiben.":::"switch(var){}"}:::{"switch"::"("::"var"::")"::"{}"}
"while":::"Lass uns eine while-Schleife schreiben.":::"while(false);"}:::{"while"::"("::"false"::")"::";"}
"do_while":::"Lass uns eine do-while-Schleife schreiben.":::"do{}while(true);"}:::{"do"::"{"::"}"::"while"::"("::"true"::")"::";"}
"for":::"Lass uns eine for-Schleife schreiben.":::"for(int a=0;a<10;a++){System.out.println(a);}"}:::{"for"::"("::"int a=0;"::"a<10;"::"a++"::")"::"{"::"Systen.out.println(a);"::"}"}
"extended_for":::"Lass uns eine erweiterte for-Schleife schreiben.":::"for(int  a:A){}":::{"for"::"("::"int"::"  a"::":"::"A"::")"::"{"::"}"}
"break":::"Lass uns eine break-Anweisung schreiben.":::"for(;;){break;}":::{"break"::";"}
"continue":::"Lass uns eine continue-Anweisung schreiben.":::"for(;;) {continue;}":::{"continue"::";"}
lesson: methods
"method_definition":::"Lass uns eine Methode definieren.":::"void cube(int  a){return  a* a* a;}":::{"void"::"cube"::"("::"int  a":")"::"{"::"return"::" a* a* a"::";"::"}"}
"method_modifiers":::"Lass uns eine static Methode definieren, die ein Wort in eine Abkürzung umwandelt.":::"public static String abbreviation(String[] words){String abr = ""; for(String w: words){abr+=w.toCharArray()[0]+".";} return abr;}":::{"public"::"static"::"String"::"abbreviation"::"("::"String[] words"::")"::"{"::"String abr="";"::"for(String w: words){abr+=w.toCharArray()[0]+".";}::"return abr;"+"}"}
"method_access":::"Lass uns eine public static Methode definieren, die eine Variabe word zurückgibt.":::"public static String turn(String word) {String ret = ""; for(char w: word.toCharArray()){ret=w+ret;} return ret;}":::{"public"::"static"::"String"::"turn"::"("::"String word"::")"::{"::"String ret = "";"::"for(char w: word.toCharArray()){ret=w+ret;}"::"return ret;"::"}"}
lesson: classes
"class_definition":::"Lass uns definieren die Klasse B definieren.":::"class B{}:::{"class"::"B"::"{"::"}"}
"inheritance":::"Lass uns definieren die Klasse B als Kindklasse von A definieren.":::"class B extends A{}":::{"class"::" B "::"extends"::" A "::"{"::"}"}
"class_modifiers":::"Lass uns die abstrakte Klasse G definieren.":::"abstract class G{}":::{"abstract"::"class"::"G"::"{"::"}"}
"access_modifiers":::"Lass uns die public Klasse F definieren.":::"public class F{}":::{"public"::" class"::" F"::"{"::"}"}
"class_fields":::"Lass uns eine Klasse B definieren, welche eine String variable besitzt.":::"class C{String name;}":::{"class"::"B::"{"::"String name;"::"}"}
"object_declaration":::"Lass uns ein Objekt der Klasse Vector(class Vector{int  a[] = new int[2];}) definieren.":::"Vector v = new Vector();":::{"Vector"::" v"::"="::"new"::" Vector"::"()"::";"}
"member_access_variables":::"Die Klasse Person besitzt die Variable name. Nun wurde ein Objekt Tom dieser Klasse erstellt. Lass uns die Variable des Objekts Tom umdefinieren.":::"class Person{public String name;}\npublic class Test{\n	public static void main(String[]  a){\n		Person Tom = new Person();\n		Tom.name = "Tom";\n	}}":::{"Tom"::"."::"name"::=""Tom""::";"}
"member_access_methods":::"Die Klasse Person besitzt die Methode get_name. Nun wurde ein Objekt Tom dieser Klasse erstellt. Lass uns über das Objekt Tom auf die Methode zugreifen.":::"class Person{public String name; public String get_name(){return this.name;}}\npublic class Test{\n	public static void main(String[]  a){\n		Person Tom = new Person();\n		Tom.name = "Tom";\n		Tom.get_name();\n	}}":::{"Tom"::"."::"get_name()"::";"}